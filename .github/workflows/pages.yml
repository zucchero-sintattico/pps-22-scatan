# Sample workflow for building and deploying a mdBook site to GitHub Pages
#
# To get started with mdBook see: https://rust-lang.github.io/mdBook/index.html
#
name: Deploy mdBook site, scaladoc and application on Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - doc
    paths-ignore:
      - "scatan.drawio"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      MDBOOK_VERSION: 0.4.21
      SCALA_TARGET: ./target/scala-3.3.0
      JS_COMPILED_TARGET: target/scala-3.3.0/scatan-fastopt
    steps:
      - uses: actions/checkout@v3
      - name: Set sbt
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "sbt"
      - name: Install mdBook
        run: |
          curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf -y | sh
          rustup update
          cargo install --version ${MDBOOK_VERSION} mdbook
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Create artifact directory
        run: mkdir -p ./site
      - name: Build scaladoc
        run: |
          sbt doc
          cp -r ${SCALA_TARGET}/api ./site/scaladoc
      - name: Build scala project
        run: |
          sbt fastLinkJS
          mkdir -p ./site/${JS_COMPILED_TARGET}
          cp -r ${SCALA_TARGET}/scatan-fastopt/main.js ./site/${JS_COMPILED_TARGET}
      - name: Copy html page
        run: cp ./scatan.html ./site/index.html
      - name: Deploy releases
        run: cp -r ./releases ./site/releases
      - name: Build test coverage
        run: |
          sbt clean coverage test
          sbt coverageReport
          cp -r ${SCALA_TARGET}/scoverage-report ./site/test-coverage
      - name: Build with mdBook
        run: |
          mdbook build docs
          cp -r ./docs/book ./site/docs
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
